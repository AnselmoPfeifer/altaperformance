<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.wordpress.alissonpedrina</groupId>
	<artifactId>altaperformance</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<properties>
		<java.version>1.7</java.version>
		<cobertura.version>2.6</cobertura.version>
		<sonar.url>http://buildserver.acme.org:9000</sonar.url>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>


	<modules>
		<module>geral</module>
		<module>jmh</module>
		<module>contiperf</module>
		<module>agent</module>
		<module>spring-petclinic</module>			
		<module>agent</module>			
		<module>classloader</module>			
	</modules>

	<build>
		<finalName>${project.artifactId}</finalName>
		<sourceDirectory>${basedir}/src/main/java</sourceDirectory>
		<outputDirectory>${basedir}/target/classes</outputDirectory>
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<!-- Build plugins will be executed during the build and then, they should be configured in the <build/> element -->
		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>${cobertura.version}</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<reportPlugins>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>cobertura-maven-plugin</artifactId>
							<version>2.6</version>
						</plugin>
						<plugin>
							<groupId>org.apache.mavens.plugins</groupId>
							<artifactId>maven-checkstyle-plugin</artifactId>
							<version>2.10</version>
							<configuration>
								<excludes>br/com/digithobrasil/cheffescolar/builder/*</excludes>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.mavens.plugins</groupId>
							<artifactId>maven-pmd-plugin</artifactId>
							<version>3.0.1</version>
							<configuration>
								<!-- PMD options -->
								<targetJdk>1.7</targetJdk>
								<aggregate>true</aggregate>
								<format>xml</format>
								<!--CPD options -->
								<minimumTokens>20</minimumTokens>
								<ignoreIdentifiers>true</ignoreIdentifiers>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>findbugs-maven-plugin</artifactId>
							<version>2.5.3-SNAPSHOT</version>
							<configuration>
								<effort>Max</effort>
								<xmlOutput>true</xmlOutput>
							</configuration>
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- This plugin has ability to automatically increment Maven POM version numbers in multi-module builds. <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>autoincrement-versions-maven-plugin</artifactId> 
				<version>2.0-SNAPSHOT</version> <executions> <execution> <id>update-pom-versions</id> <goals> <goal>increment</goal> <goal>commit</goal> </goals> <configuration> <autoIncrementVersion>true</autoIncrementVersion> 
				</configuration> </execution> </executions> </plugin> -->

			<!-- This mojo is designed to get a unique build number for each time you build your project. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- This plugin provides the capability to build and sign jars. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Build>${buildNumber}</Implementation-Build>
							<Implementation-Time>${timestamp}</Implementation-Time>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- The Resources Plugin handles the copying of project resources to the output directory -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4.2</version>
			</plugin>

			<!-- The Eclipse Plugin is used to generate Eclipse IDE files (*.classpath, *.wtpmodules and the .settings folder) for use with a project. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<addGroupIdToProjectName>true</addGroupIdToProjectName>
				</configuration>
			</plugin>

		</plugins>
	</build>
	
	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
	</dependencies>
</project>